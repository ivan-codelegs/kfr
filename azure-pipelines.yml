jobs:
- job: macOS_x86_64_Clang_Release
  timeoutInMinutes: 180
  pool:
    vmImage: 'macOS-11'
  steps:
  - bash: |
      set -e

      curl -o "$(Agent.TempDirectory)/sde.tar.xz" -L $(SDE_URL_MACOS3)
      mkdir -p "$(Agent.TempDirectory)/sde-bin"
      tar -C "$(Agent.TempDirectory)/sde-bin" -xJf "$(Agent.TempDirectory)/sde.tar.xz" --strip 1
      export PATH=$PATH:$(Agent.TempDirectory)/sde-bin
      sde64 -help || true

      sudo security authorizationdb write system.privilege.taskport allow

      sde64 -chip_check_exe_only -- $(Agent.TempDirectory)/sde-bin/intel64/nullapp

      /bin/bash -c "sudo xcode-select -s /Applications/Xcode_13.2.1.app/Contents/Developer"
      brew install ninja
      ci/run.sh build-release -DKFR_USE_SDE=ON -DKFR_ARCH=sse2 -DKFR_ENABLE_DFT_MULTIARCH=ON -DCMAKE_BUILD_TYPE=Release      

- job: Windows_MSVC_x86_64_AVX512_Clang16_Release
  timeoutInMinutes: 180
  pool:
    vmImage: 'windows-2019'
  steps:
  - script: |
      choco install ninja
      choco install llvm

      curl -o "$(Agent.TempDirectory)/sde.zip" -L $(SDE_URL_WINDOWS)
      "C:\Program Files\7-Zip\7z.exe" x -oC:\sde "$(Agent.TempDirectory)/sde.zip"

      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      set PATH=%PATH:C:\tools\mingw64\bin;=%
      set PATH=%PATH:C:\Program Files\Git\mingw64\bin;=%
      set PATH=%PATH:C:\Strawberry\c\bin;=%
      set PATH=C:\sde;%PATH%
      ci\run.cmd build-release -DKFR_ENABLE_CAPI_BUILD=ON -DKFR_ARCH_TESTS=sse2,ssse3,sse42,avx,avx2,avx512 -DKFR_ENABLE_DFT_MULTIARCH=ON -DCMAKE_CXX_COMPILER="C:/Program Files/LLVM/bin/clang-cl.exe" -DCMAKE_LINKER="C:/Program Files/LLVM/bin/lld-link.exe" -DKFR_USE_SDE=ON -DKFR_ARCH=sse2 -DCMAKE_CXX_FLAGS=-m64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_AR="C:/Program Files/LLVM/bin/llvm-lib.exe"

- job: Linux_x86_64_Clang14
  timeoutInMinutes: 180
  pool:
    vmImage: 'ubuntu-22.04'
  steps:
  - bash: |
      set -e
      sudo apt-get update && sudo apt-get install -y ninja-build clang-14
      curl -o "$(Agent.TempDirectory)/sde.tar.bz2" -L $(SDE_URL_LINUX)
      mkdir "$(Agent.TempDirectory)/sde-bin"
      tar -C "$(Agent.TempDirectory)/sde-bin" -xjf "$(Agent.TempDirectory)/sde.tar.bz2"  --strip 1
      sudo ln -s $(Agent.TempDirectory)/sde-bin/sde64 /usr/bin/sde
      ci/run.sh build-release -DKFR_ENABLE_CAPI_BUILD=ON -DKFR_ARCH_TESTS=sse2,sse3,sse41,avx,avx2,avx512 -DKFR_ARCH=avx2 -DKFR_USE_SDE=ON -DCMAKE_CXX_COMPILER=clang++-14 -DCMAKE_BUILD_TYPE=Release
